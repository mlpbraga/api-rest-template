{
	"info": {
		"_postman_id": "f66211c2-b7af-4dc6-b029-18cd42d3f290",
		"name": "api-rest-template",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "success",
					"item": [
						{
							"name": "auth with username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e47cfb6-962a-49da-9842-c73172bee0b8",
										"exec": [
											"pm.test('POST auth with username response should have status code 202', () => {",
											"    pm.response.to.have.status(202);",
											"})",
											"",
											"pm.test('POST auth with username response should be okay to process', function () {",
											"    pm.response.to.not.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.expiresIn).to.be.an('number')",
											"    pm.expect(jsonData.token).to.be.an('string')",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{user}}\",\n\t\"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "auth with email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e47cfb6-962a-49da-9842-c73172bee0b8",
										"exec": [
											"pm.test('POST auth with email response should have status code 202', () => {",
											"    pm.response.to.have.status(202);",
											"})",
											"",
											"pm.test('POST auth with email response should be okay to process', function () {",
											"    pm.response.to.not.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.expiresIn).to.be.an('number')",
											"    pm.expect(jsonData.token).to.be.an('string')",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "bad request",
					"item": [
						{
							"name": "auth missing password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3de602-386c-4462-a4a9-29ae8630b6e4",
										"exec": [
											"pm.test('POST auth missing password response should have status code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test('POST auth missing password response should be okay to process', function () {",
											"    pm.response.to.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.be.eql(400);",
											"    pm.expect(jsonData.message).to.be.eql('Missing password field');",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{user}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "auth missing username and email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3de602-386c-4462-a4a9-29ae8630b6e4",
										"exec": [
											"pm.test('POST auth missing missing email or username password response should have status code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test('POST auth missing email or username response should be okay to process', function () {",
											"    pm.response.to.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.be.eql(400);",
											"    pm.expect(jsonData.message).to.be.eql('Missing email or username');",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "auth having username and email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3de602-386c-4462-a4a9-29ae8630b6e4",
										"exec": [
											"pm.test('POST auth missing missing email or username password response should have status code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test('POST auth missing email or username response should be okay to process', function () {",
											"    pm.response.to.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.be.eql(400);",
											"    pm.expect(jsonData.message).to.be.eql('Parameters \\\"email\\\" and \\\"username\\\" are mutually exclusive');",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{user}}\",\n\t\"email\": \"{{email}}\",\n\t\"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "unauthorized",
					"item": [
						{
							"name": "auth invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ec48093-9d37-41e3-8bf3-7fb805b1d249",
										"exec": [
											"pm.test('POST auth invalid email response should have status code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test('POST auth invalid email response should be okay to process', function () {",
											"    pm.response.to.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.be.eql(401);",
											"    pm.expect(jsonData.message).to.be.eql('Invalid email or username');",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"invalid\",\n\t\"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "auth invalid username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ec48093-9d37-41e3-8bf3-7fb805b1d249",
										"exec": [
											"pm.test('POST authinvalid username response should have status code 400', () => {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test('POST auth invalid username response should be okay to process', function () {",
											"    pm.response.to.be.error;",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.code).to.be.eql(401);",
											"    pm.expect(jsonData.message).to.be.eql('Invalid email or username');",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"invalid\",\n\t\"password\": \"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{env}}/auth",
									"host": [
										"{{env}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}